# Entropy Matter, Automated Entropy Packages Build Service, example spec file

# List of packages required to be built.
# Comma separated, example: app-foo/bar, bar-baz/foo
# Mandatory, cannot be empty
packages:
	app-crypt/WiRouterKeyRec,
	app-crypt/aespipe,
	app-crypt/asedriveiiie-serial,
	app-crypt/asedriveiiie-usb,
	app-crypt/asekey,
	app-crypt/bcwipe,
	app-crypt/bsign,
	app-crypt/ccid,
	app-crypt/ccrypt,
	app-crypt/certbot,
	app-crypt/chntpw,
	app-crypt/codegroup,
	app-crypt/coolkey,
	app-crypt/dieharder,
	app-crypt/dirmngr,
	app-crypt/elettra,
	app-crypt/fcrackzip,
	app-crypt/gcr,
	app-crypt/gifshuffle,
	app-crypt/gnupg,
	app-crypt/gnupg-pkcs11-scd,
	app-crypt/gorilla,
	app-crypt/gpa,
	app-crypt/gpg-ringmgr,
	app-crypt/gpgme,
	app-crypt/gpgstats,
	app-crypt/hashalot,
	app-crypt/jacksum,
	app-crypt/johntheripper,
	app-crypt/keylookup,
	app-crypt/keynote,
	app-crypt/kstart,
	app-crypt/mcrypt,
	app-crypt/md4sum,
	app-crypt/md5deep,
	app-crypt/md6sum,
	app-crypt/mhash,
	app-crypt/nasty,
	app-crypt/onak,
	app-crypt/openssl-blacklist,
	app-crypt/openssl-tpm-engine,
	app-crypt/openvpn-blacklist,
	app-crypt/ophcrack,
	app-crypt/ophcrack-tables,
	app-crypt/p11-kit,
	app-crypt/pdfcrack,
	app-crypt/pgpdump,
	app-crypt/pinentry,
	app-crypt/pinentry-gnome,
	app-crypt/pinentry-gtk2,
	app-crypt/pinentry-qt,
	app-crypt/pius,
	app-crypt/pkcrack,
	app-crypt/pkcs11-data,
	app-crypt/pkcs11-dump,
	app-crypt/quickcrypt,
	app-crypt/rainbowcrack,
	app-crypt/rotix,
	app-crypt/seahorse,
	app-crypt/sbsigntool,
	app-crypt/sgeps,
	app-crypt/shash,
	app-crypt/sign,
	app-crypt/signing-party,
	app-crypt/ssh-multiadd,
	app-crypt/stan,
	app-crypt/tinyca,
	app-crypt/tpm-tools,
	app-crypt/trousers,
	app-crypt/veracrypt,
	app-crypt/xca,
	app-crypt/xor-analyze,
	app-crypt/yubikey-neo-manager,
	app-crypt/zuluCrypt

# Entropy repository where to commit packages
# Mandatory, cannot be empty
repository: sabayon-hell

# Provide custom build arguments to Portage.
# Default is: --verbose --nospinner
build-args: --verbose --oneshot --nospinner --quiet-build=y --quiet-fail --fail-clean=y --complete-graph

# Allow Source Package Manager (Portage) repository change?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change: no

# In case of Source Package Manager repository change, allow
# execution if the original repository does not contain
# the package anymore?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change-if-upstreamed: yes

# Allow compiling package even if it's not actually installed on system?
# Valid values are either "yes" or "no"
# Default is: no
not-installed: no

# Allow dependencies to be pulled in?
# Valid values are either "yes" or "no"
# Default is: no
dependencies: yes

# Allow package downgrade?
# Valid values are either "yes" or "no"
# Default is: no
downgrade: no

# Allow package rebuild?
# Valid values are either "yes" or "no"
# Default is: no
rebuild: no

# Make possible to continue if one or more packages fail to build?
# Valid values are either "yes" or "no"
# Default is: no
keep-going: yes

# Allow new USE flags?
# Valid values are either "yes" or "no"
# Default is: no
new-useflags: yes

# Allow removed USE flags?
# Valid values are either "yes" or "no"
# Default is: no
removed-useflags: yes

# Package pre execution script hook
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpre: /home/fabio/repos/entropy/services/matter_examples/pkgpre.sh

# Package build post execution script hook, executed for each package
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpost: /home/fabio/repos/entropy/services/matter_examples/pkgpost.sh

# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# MATTER_PORTAGE_FAILED_PACKAGE_NAME = exact name (atom, CPV) of the failing
# package, the one that triggered the buildfail hook.
# MATTER_PORTAGE_REPOSITORY = Portage repository from where the package
# comes from
# MATTER_PORTAGE_BUILD_LOG_DIR = directory containing all the build logs of
# the failed package
buildfail: /particles/hooks/buildfail.sh

# For more info regarding exported environment variables, please see:
# matter --help
