# Entropy Matter, Automated Entropy Packages Build Service, example spec file

# List of packages required to be built.
# Comma separated, example: app-foo/bar, bar-baz/foo
# Mandatory, cannot be empty
packages:
	kde-base/akonadiconsole,
	kde-base/akregator,
	kde-base/blogilo,
	kde-base/calendarjanitor,
	kde-base/kabcclient,
	kde-base/kactivities,
	kde-base/kaddressbook,
	kde-base/kalarm,
	kde-base/katepart,
	kde-base/kdebindings-meta,
	kde-base/kde-env,
	kde-base/kdelibs,
	kde-base/kde-meta,
	kde-base/kdepim-common-libs,
	kde-base/kdepim-icons,
	kde-base/kdepim-kresources,
	kde-base/kdepimlibs,
	kde-base/kdepim-meta,
	kde-base/kdepim-runtime,
	kde-base/kdm,
	kde-base/kephal,
	kde-base/khelpcenter,
	kde-base/kinfocenter,
	kde-base/kjots,
	kde-base/kleopatra,
	kde-base/kmail,
	kde-base/knode,
	kde-base/konsolekalendar,
	kde-base/kontact,
	kde-base/korganizer,
	kde-base/krossjava,
	kde-base/krosspython,
	kde-base/ksplash,
	kde-base/kstartupconfig,
	kde-base/kstyles,
	kde-base/ksysguard,
	kde-base/ksystraycmd,
	kde-base/ktimetracker,
	kde-base/ktnef,
	kde-base/kwin,
	kde-base/kwrited,
	kde-base/libkworkspace,
	kde-base/liboxygenstyle,
	kde-base/libplasmaclock,
	kde-base/libplasmagenericshell,
	kde-base/perlkde,
	kde-base/perlqt,
	kde-base/pykde4,
	kde-base/qguiplatformplugin_kde,
	kde-base/smokegen,
	kde-base/smokekde,
	kde-base/smokeqt,

	kde-base/kde-meta
	kde-base/kdebindings-meta
	kde-base/kdepim-meta

	kde-base/krossjava,
	kde-base/smokegen,
	kde-base/smokeqt

# Entropy repository where to commit packages
# Mandatory, cannot be empty
repository: sabayon-hell

# Provide custom build arguments to Portage.
# Default is: --verbose --nospinner
build-args: --verbose --oneshot --nospinner --quiet-build=y --quiet-fail --fail-clean=y --complete-graph

# Allow Source Package Manager (Portage) repository change?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change: no

# In case of Source Package Manager repository change, allow
# execution if the original repository does not contain
# the package anymore?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change-if-upstreamed: yes

# Allow compiling package even if it's not actually installed on system?
# Valid values are either "yes" or "no"
# Default is: no
not-installed: no

# Allow dependencies to be pulled in?
# Valid values are either "yes" or "no"
# Default is: no
dependencies: yes

# Allow package downgrade?
# Valid values are either "yes" or "no"
# Default is: no
downgrade: no

# Allow package rebuild?
# Valid values are either "yes" or "no"
# Default is: no
rebuild: no

# Make possible to continue if one or more packages fail to build?
# Valid values are either "yes" or "no"
# Default is: no
keep-going: yes

# Allow new USE flags?
# Valid values are either "yes" or "no"
# Default is: no
new-useflags: yes

# Allow removed USE flags?
# Valid values are either "yes" or "no"
# Default is: no
removed-useflags: yes

# Package pre execution script hook
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpre: /home/fabio/repos/entropy/services/matter_examples/pkgpre.sh

# Package build post execution script hook, executed for each package
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpost: /home/fabio/repos/entropy/services/matter_examples/pkgpost.sh

# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# MATTER_PORTAGE_FAILED_PACKAGE_NAME = exact name (atom, CPV) of the failing
# package, the one that triggered the buildfail hook.
# MATTER_PORTAGE_REPOSITORY = Portage repository from where the package
# comes from
# MATTER_PORTAGE_BUILD_LOG_DIR = directory containing all the build logs of
# the failed package
buildfail: /particles/hooks/buildfail.sh

# For more info regarding exported environment variables, please see:
# matter --help
