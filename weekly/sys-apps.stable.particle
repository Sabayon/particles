# Entropy Matter, Automated Entropy Packages Build Service, example spec file

# List of packages required to be built.
# Comma separated, example: app-foo/bar, bar-baz/foo
# Mandatory, cannot be empty
packages:
	sys-apps/accountsservice,
	sys-apps/ack,
	sys-apps/acl,
	sys-apps/attr,
	sys-apps/baobab,
	sys-apps/baselayout,
	sys-apps/biosdevname,
	sys-apps/busybox,
	sys-apps/cookbug,
	sys-apps/coreutils,
	sys-apps/dbus,
	sys-apps/ddcxinfo-knoppix-bin,
	sys-apps/debianutils,
	sys-apps/diffutils,
	sys-apps/dmapi,
	sys-apps/dmidecode,
	sys-apps/dnotify,
	sys-apps/dog,
	sys-apps/dstat,
	sys-apps/dtc,
	sys-apps/ed,
	sys-apps/entropy,
	sys-apps/entropy-server,
	sys-apps/fakechroot,
	sys-apps/fakeroot,
	sys-apps/file,
	sys-apps/findutils,
	sys-apps/fxload,
	sys-apps/gawk,
	sys-apps/gnome-disk-utility,
	sys-apps/gptfdisk,
	sys-apps/gpu-detector,
	sys-apps/grep,
	sys-apps/groff,
	sys-apps/hbaapi,
	sys-apps/hdparm,
	sys-apps/help2man,
	sys-apps/hwdata-gentoo,
	sys-apps/hwinfo,
	sys-apps/hwloc,
	sys-apps/i2c-tools,
	sys-apps/ifd-gempc,
	sys-apps/ifplugd,
	sys-apps/ipmitool,
	sys-apps/ipmiutil,
	sys-apps/iproute2,
	sys-apps/irqbalance,
	sys-apps/kbd,
	sys-apps/kexec-tools,
	sys-apps/keyboard-configuration-helpers,
	sys-apps/keyutils,
	sys-apps/kmod,
	sys-apps/ksplice,
	sys-apps/less,
	sys-apps/libhbalinux,
	sys-apps/lm_sensors,
	sys-apps/lsb-release,
	sys-apps/lshw,
	sys-apps/magneto-core,
	sys-apps/man-db,
	sys-apps/man-pages,
	sys-apps/man-pages-posix,
	sys-apps/microcode-ctl,
	sys-apps/microcode-data,
	sys-apps/minised,
	sys-apps/miscfiles,
	sys-apps/mlocate,
	sys-apps/most,
	sys-apps/net-tools,
	sys-apps/netkit-base,
	sys-apps/netplug,
	sys-apps/openrc,
	sys-apps/paludis,
	sys-apps/paxctl,
	sys-apps/pciutils,
	sys-apps/pcmciautils,
	sys-apps/pcsc-lite,
	sys-apps/pcsc-slb-rf72-drv,
	sys-apps/pkgcore,
	sys-apps/pmount,
	sys-apps/preload,
	sys-apps/pv,
	sys-apps/qdiskusage,
	sys-apps/qingy,
	sys-apps/readahead-list,
	sys-apps/rename,
	sys-apps/renameutils,
	sys-apps/rigo-daemon,
	sys-apps/rng-tools,
	sys-apps/sandbox,
	sys-apps/sdparm,
	sys-apps/sed,
	sys-apps/setserial,
	sys-apps/sg3_utils,
	sys-apps/shadow,
	sys-apps/smartmontools,
	sys-apps/syscriptor,
	sys-apps/sysvinit,
	sys-apps/tcp-wrappers,
	sys-apps/tuxonice-userui,
	sys-apps/uam,
	sys-apps/ucspi-ssl,
	sys-apps/ucspi-tcp,
	sys-apps/ucspi-unix,
	sys-apps/udevil,
	sys-apps/ultracopier,
	sys-apps/usb_modeswitch,
	sys-apps/usbutils,
	sys-apps/usermode-utilities,
	sys-apps/util-linux,
	sys-apps/v86d,
	sys-apps/vbetool,
	sys-apps/xinetd,
	sys-apps/xmbmon,

# Enforce stable or unstable packages on emerge.
# yes = only stable packages are accepted
# no  = both stable and unstable packages are accepted
# inherit = inherit portage make.conf.* settings for ACCEPT_KEYWORDS
# Valid values are either "yes" or "no", "inherit"
# Default is: inherit
stable: yes

# Entropy repository where to commit packages
# Mandatory, cannot be empty
repository: sabayon-hell

# Provide custom build arguments to Portage.
# Default is: --verbose --nospinner
# --ask and --buildpkgonly are not allowed and automatically filtered.
build-args: --verbose --oneshot --nospinner --quiet-build=y --quiet-fail --fail-clean=y --complete-graph

# Only build the packages without merging them into the system.
# Valid values are either "yes" or "no"
# Default is: no
# build-only: no

# Drop older packages in the same slot when adding an injected package.
# Injected packages come into play when 'build-only: yes'
# Default is: no
# drop-old-injected: no

# Allow Source Package Manager (Portage) repository change?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change: no

# In case of Source Package Manager repository change, allow
# execution if the original repository does not contain
# the package anymore?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change-if-upstreamed: yes

# Allow compiling package even if it's not actually installed on system?
# Valid values are either "yes" or "no"
# Default is: no
not-installed: no

# Allow soft-blockers in the merge queue? Packages will be unmerged if yes.
# Valid values are either "yes" or "no"
# Default is: yes
soft-blocker: yes

# Allow package unmerges in the merge queue? Packages will be unmerged if yes.
# Valid values are either "yes" or "no"
# Default is: yes
unmerge: yes

# Allow dependencies to be pulled in?
# Valid values are either "yes" or "no"
# Default is: no
dependencies: yes

# Allow package downgrade?
# Valid values are either "yes" or "no"
# Default is: no
downgrade: no

# Allow package rebuild?
# Valid values are either "yes" or "no"
# Default is: no
rebuild: no

# Make possible to continue if one or more packages fail to build?
# Valid values are either "yes" or "no"
# Default is: no
keep-going: yes

# Allow new USE flags?
# Valid values are either "yes" or "no"
# Default is: no
new-useflags: yes

# Allow removed USE flags?
# Valid values are either "yes" or "no"
# Default is: no
removed-useflags: yes

# Package pre execution script hook
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpre: /home/fabio/repos/entropy/services/matter_examples/pkgpre.sh

# Package build post execution script hook, executed for each package
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpost: /home/fabio/repos/entropy/services/matter_examples/pkgpost.sh

# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# MATTER_PORTAGE_FAILED_PACKAGE_NAME = exact name (atom, CPV) of the failing
# package, the one that triggered the buildfail hook.
# MATTER_PORTAGE_REPOSITORY = Portage repository from where the package
# comes from
# MATTER_PORTAGE_BUILD_LOG_DIR = directory containing all the build logs of
# the failed package
buildfail: /particles/hooks/buildfail.sh

# For more info regarding exported environment variables, please see:
# matter --help
