# Entropy Matter, Automated Entropy Packages Build Service, example spec file

# List of packages required to be built.
# Comma separated, example: app-foo/bar, bar-baz/foo
# Mandatory, cannot be empty
packages:
	x11-apps/amlc,
	x11-apps/appres,
	x11-apps/bdftopcf,
	x11-apps/beforelight,
	x11-apps/bitmap,
	x11-apps/ccsm,
	x11-apps/editres,
	x11-apps/fonttosfnt,
	x11-apps/fslsfonts,
	x11-apps/fstobdf,
	x11-apps/fusion-icon,
	x11-apps/iceauth,
	x11-apps/ico,
	x11-apps/intel-gpu-tools,
	x11-apps/listres,
	x11-apps/luit,
	x11-apps/mesa-progs,
	x11-apps/mkfontdir,
	x11-apps/mkfontscale,
	x11-apps/oclock,
	x11-apps/radeontop,
	x11-apps/xrectsel,
	x11-apps/rgb,
	x11-apps/rstart,
	x11-apps/scripts,
	x11-apps/sessreg,
	x11-apps/setxkbmap,
	x11-apps/showfont,
	x11-apps/simple-ccsm,
	x11-apps/smproxy,
	x11-apps/transset,
	x11-apps/viewres,
	x11-apps/x11perf,
	x11-apps/xauth,
	x11-apps/xbacklight,
	x11-apps/xbiff,
	x11-apps/xcalc,
	x11-apps/xclipboard,
	x11-apps/xclock,
	x11-apps/xcmsdb,
	x11-apps/xconsole,
	x11-apps/xcursorgen,
	x11-apps/xdbedizzy,
	x11-apps/xditview,
	x11-apps/xdm,
	x11-apps/xdpyinfo,
	x11-apps/xdriinfo,
	x11-apps/xedit,
	x11-apps/xev,
	x11-apps/xeyes,
	x11-apps/xf86dga,
	x11-apps/xfd,
	x11-apps/xfontsel,
	x11-apps/xgamma,
	x11-apps/xgc,
	x11-apps/xhost,
	x11-apps/xinit,
	x11-apps/xinput,
	x11-apps/xinput_calibrator,
	x11-apps/xkbcomp,
	x11-apps/xkbevd,
	x11-apps/xkbprint,
	x11-apps/xkbset,
	x11-apps/xkbutils,
	x11-apps/xkill,
	x11-apps/xload,
	x11-apps/xlogo,
	x11-apps/xlsatoms,
	x11-apps/xlsclients,
	x11-apps/xlsfonts,
	x11-apps/xmag,
	x11-apps/xman,
	x11-apps/xmessage,
	x11-apps/xmodmap,
	x11-apps/xmore,
	x11-apps/xpr,
	x11-apps/xprop,
	x11-apps/xrandr,
	x11-apps/xrdb,
	x11-apps/xrefresh,
	x11-apps/xset,
	x11-apps/xsetroot,
	x11-apps/xsm,
	x11-apps/xstdcmap,
	x11-apps/xtrap,
	x11-apps/xvidtune,
	x11-apps/xvinfo,
	x11-apps/xwarppointer,
	x11-apps/xwd,
	x11-apps/xwininfo,
	x11-apps/xwud,

# Enforce stable or unstable packages on emerge.
# yes = only stable packages are accepted
# no  = both stable and unstable packages are accepted
# inherit = inherit portage make.conf.* settings for ACCEPT_KEYWORDS
# Valid values are either "yes" or "no", "inherit"
# Default is: inherit
stable: inherit

# Entropy repository where to commit packages
# Mandatory, cannot be empty
repository: sabayon-hell

# Provide custom build arguments to Portage.
# Default is: --verbose --nospinner
build-args: --verbose --oneshot --nospinner --quiet-build=y --quiet-fail --fail-clean=y --complete-graph

# Allow Source Package Manager (Portage) repository change?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change: no

# In case of Source Package Manager repository change, allow
# execution if the original repository does not contain
# the package anymore?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change-if-upstreamed: yes

# Allow compiling package even if it's not actually installed on system?
# Valid values are either "yes" or "no"
# Default is: no
not-installed: no

# Allow soft-blockers in the merge queue? Packages will be unmerged if yes.
# Valid values are either "yes" or "no"
# Default is: yes
soft-blocker: yes

# Allow package unmerges in the merge queue? Packages will be unmerged if yes.
# Valid values are either "yes" or "no"
# Default is: yes
unmerge: yes

# Allow dependencies to be pulled in?
# Valid values are either "yes" or "no"
# Default is: no
dependencies: yes

# Allow package downgrade?
# Valid values are either "yes" or "no"
# Default is: no
downgrade: no

# Allow package rebuild?
# Valid values are either "yes" or "no"
# Default is: no
rebuild: no

# Make possible to continue if one or more packages fail to build?
# Valid values are either "yes" or "no"
# Default is: no
keep-going: yes

# Allow new USE flags?
# Valid values are either "yes" or "no"
# Default is: no
new-useflags: yes

# Allow removed USE flags?
# Valid values are either "yes" or "no"
# Default is: no
removed-useflags: yes

# Package pre execution script hook
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpre: /home/fabio/repos/entropy/services/matter_examples/pkgpre.sh

# Package build post execution script hook, executed for each package
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpost: /home/fabio/repos/entropy/services/matter_examples/pkgpost.sh

# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# MATTER_PORTAGE_FAILED_PACKAGE_NAME = exact name (atom, CPV) of the failing
# package, the one that triggered the buildfail hook.
# MATTER_PORTAGE_REPOSITORY = Portage repository from where the package
# comes from
# MATTER_PORTAGE_BUILD_LOG_DIR = directory containing all the build logs of
# the failed package
buildfail: /particles/hooks/buildfail.sh

# For more info regarding exported environment variables, please see:
# matter --help
