# Entropy Matter, Automated Entropy Packages Build Service, example spec file

# List of packages required to be built.
# Comma separated, example: app-foo/bar, bar-baz/foo
# Mandatory, cannot be empty
packages:
	media-libs/SoQt,
	media-libs/a52dec,
	media-libs/aalib,
	media-libs/adplug,
	media-libs/aften,
	media-libs/aldumb,
	media-libs/allegro,
	media-libs/alsa-lib,
	media-libs/alsa-oss,
	media-libs/alure,
	media-libs/atlas-c++,
	media-libs/aubio,
	media-libs/audiofile,
	media-libs/babl,
	media-libs/bio2jack,
	media-libs/blib,
	media-libs/cal3d,
	media-libs/celt,
	media-libs/chromaprint,
	media-libs/clutter,
	media-libs/clutter-gst,
	media-libs/clutter-gtk,
	media-libs/cogl,
	media-libs/coin,
	media-libs/compface,
	media-libs/ctl,
	media-libs/devil,
	media-libs/dssi,
	media-libs/dumb,
	media-libs/elementary,
	media-libs/esdl,
	media-libs/exiftool,
	media-libs/faac,
	media-libs/faad2,
	media-libs/ffmpegsource,
	media-libs/fidlib,
	media-libs/flac,
	media-libs/flickcurl,
	media-libs/fluidsynth-dssi,
	media-libs/fmod,
	media-libs/ftgl,
	media-libs/gavl,
	media-libs/gd,
	media-libs/gegl,
	media-libs/gexiv2,
	media-libs/giblib,
	media-libs/giflib,
	media-libs/glew,
	media-libs/glfw,
	media-libs/glm,
	media-libs/glpng,
	media-libs/glu,
	media-libs/gluon,
	media-libs/glyr,
	media-libs/gmtk,
	media-libs/gnonlin,
	media-libs/grilo,
	media-libs/gst-plugins-bad,
	media-libs/gst-plugins-base,
	media-libs/gst-plugins-good,
	media-libs/gst-plugins-ugly,
	media-libs/gstreamer,
	media-libs/hamlib,
	media-libs/herqq,
	media-libs/id3lib,
	media-libs/ilmbase,
	media-libs/libXcm,
	media-libs/libcdaudio,
	media-libs/libcddb,
	media-libs/libchamplain,
	media-libs/libchamplain,
	media-libs/libclalsadrv,
	media-libs/libclthreads,
	media-libs/libclxclient,
	media-libs/libcue,
	media-libs/libcuefile,
	media-libs/libdc1394,
	media-libs/libdca,
	media-libs/libdiscid,
	media-libs/libdmtx,
	media-libs/libdv,
	media-libs/libdvb,
	media-libs/libdvbpsi,
	media-libs/libdvdcss,
	media-libs/libdvdnav,
	media-libs/libdvdplay,
	media-libs/libdvdread,
	media-libs/libechonest,
	media-libs/libemf,
	media-libs/libexif,
	media-libs/libexif-gtk,
	media-libs/libfame,
	media-libs/libffado,
	media-libs/libfishsound,
	media-libs/libfpx,
	media-libs/libggi,
	media-libs/libggigcp,
	media-libs/libggimisc,
	media-libs/libggiwmh,
	media-libs/libgig,
	media-libs/libgii,
	media-libs/libgnome-media-profiles,
	media-libs/libgphoto2,
	media-libs/libgpod,
	media-libs/libharu,
	media-libs/libicns,
	media-libs/libid3tag,
	media-libs/libiec61883,
	media-libs/libifp,
	media-libs/libiptcdata,
	media-libs/libj2k,
	media-libs/libjpeg-turbo,
	media-libs/libjsw,
	media-libs/libkate,
	media-libs/libkface,
	media-libs/libkgeomap,
	media-libs/liblastfm,
	media-libs/libmikmod,
	media-libs/libmimic,
	media-libs/libmms,
	media-libs/libmng,
	media-libs/libmodplug,
	media-libs/libmp3splt,
	media-libs/libmp4v2,
	media-libs/libmp4v2,
	media-libs/libmpd,
	media-libs/libmpdclient,
	media-libs/libmpeg2,
	media-libs/libmpeg3,
	media-libs/libmtp,
	media-libs/libnjb,
	media-libs/libofa,
	media-libs/libogg,
	media-libs/liboggz,
	media-libs/libprojectm,
	media-libs/libprojectm-qt,
	media-libs/libquicktime,
	media-libs/libraw,
	media-libs/libreplaygain,
	media-libs/libsamplerate,
	media-libs/libsfml,
	media-libs/libshout,
	media-libs/libsidplay,
	media-libs/libsmf,
	media-libs/libsndfile,
	media-libs/libsoundtouch,
	media-libs/libsvg,
	media-libs/libtaginfo,
	media-libs/libtheora,
	media-libs/libtxc_dxtn,
	media-libs/libuninameslist,
	media-libs/libv4l,
	media-libs/libvisual,
	media-libs/libvorbis,
	media-libs/libvpx,
	media-libs/libwebp,
	media-libs/libwmf,
	media-libs/libxtract,
	media-libs/libzen,
	media-libs/lilv,
	media-libs/lv2-ui,
	media-libs/lv2core,
	media-libs/mesa,
	media-libs/phonon,
	media-libs/phonon-gstreamer,
	media-libs/phonon-vlc,
	media-libs/rubberband,
	media-libs/sdl-flic,
	media-libs/sdl-gfx,
	media-libs/sdl-image,
	media-libs/sdl-mixer,
	media-libs/sdl-net,
	media-libs/sdl-pango,
	media-libs/sdl-sound,
	media-libs/sdl-ttf,
	media-libs/taglib,
	media-libs/taglib-extras,
	media-libs/xine-lib,
	media-libs/xvid,
	media-libs/zita-convolver,
	media-libs/zita-resampler:0,

# Enforce stable or unstable packages on emerge.
# yes = only stable packages are accepted
# no  = both stable and unstable packages are accepted
# inherit = inherit portage make.conf.* settings for ACCEPT_KEYWORDS
# Valid values are either "yes" or "no", "inherit"
# Default is: inherit
stable: inherit

# Entropy repository where to commit packages
# Mandatory, cannot be empty
repository: sabayon-hell

# Provide custom build arguments to Portage.
# Default is: --verbose --nospinner
# --ask and --buildpkgonly are not allowed and automatically filtered.
build-args: --verbose --oneshot --nospinner --quiet-build=y --quiet-fail --fail-clean=y --complete-graph

# Only build the packages without merging them into the system.
# Valid values are either "yes" or "no"
# Default is: no
# build-only: no

# Drop older packages in the same slot when adding an injected package.
# Injected packages come into play when 'build-only: yes'
# Default is: no
# drop-old-injected: no

# Allow Source Package Manager (Portage) repository change?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change: no

# In case of Source Package Manager repository change, allow
# execution if the original repository does not contain
# the package anymore?
# Valid values are either "yes" or "no"
# Default is: no
spm-repository-change-if-upstreamed: yes

# Allow compiling package even if it's not actually installed on system?
# Valid values are either "yes" or "no"
# Default is: no
not-installed: no

# Allow soft-blockers in the merge queue? Packages will be unmerged if yes.
# Valid values are either "yes" or "no"
# Default is: yes
soft-blocker: yes

# Allow package unmerges in the merge queue? Packages will be unmerged if yes.
# Valid values are either "yes" or "no"
# Default is: yes
unmerge: yes

# Allow dependencies to be pulled in?
# Valid values are either "yes" or "no"
# Default is: no
dependencies: yes

# Allow package downgrade?
# Valid values are either "yes" or "no"
# Default is: no
downgrade: no

# Allow package rebuild?
# Valid values are either "yes" or "no"
# Default is: no
rebuild: no

# Make possible to continue if one or more packages fail to build?
# Valid values are either "yes" or "no"
# Default is: no
keep-going: yes

# Allow new USE flags?
# Valid values are either "yes" or "no"
# Default is: no
new-useflags: yes

# Allow removed USE flags?
# Valid values are either "yes" or "no"
# Default is: no
removed-useflags: yes

# Package pre execution script hook
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# pkgpre: /home/fabio/repos/entropy/services/matter_examples/pkgpre.sh

# Package build post execution script hook, executed for each package
# Valid value is path to executable file
# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# MATTER_BUILT_PACKAGES      = space sep. list of names of the packages
# that have been built.
# MATTER_FAILED_PACKAGES     = space sep. list of names of the packages
# that failed to be built.
# MATTER_NOT_FOUND_PACKAGES  = space sep. list of names of the packages
# that haven't been found.
# MATTER_NOT_INSTALLED_PACKAGES = space sep. list of names of the packages
# that are not installed.
# pkgpost: /home/fabio/repos/entropy/services/matter_examples/pkgpost.sh

# Env vars:
# MATTER_PACKAGE_NAMES       = space sep. list of names of the packages
# that would be built. It does not reflect the name of the failing packages,
# because they could be just dependencies of them.
# MATTER_PORTAGE_FAILED_PACKAGE_NAME = exact name (atom, CPV) of the failing
# package, the one that triggered the buildfail hook.
# MATTER_PORTAGE_REPOSITORY = Portage repository from where the package
# comes from
# MATTER_PORTAGE_BUILD_LOG_DIR = directory containing all the build logs of
# the failed package
buildfail: /particles/hooks/buildfail.sh

# For more info regarding exported environment variables, please see:
# matter --help
